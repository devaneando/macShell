<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="pcsg-generated-ruleset" 
    xmlns="http://pmd.sf.net/ruleset/1.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd" 
    xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
    <description>
        Created with the PHP Coding Standard Generator and customized by myself.
        Check:
            https://phpmd.org/rules/index.html
            http://edorian.github.com/php-coding-standard-generator
    </description>
    <!-- ##### Clean Code Rules ############################################################ -->
    <rule ref="rulesets/cleancode.xml/BooleanArgumentFlag" />
    <rule ref="rulesets/cleancode.xml/ElseExpression" />

    <!-- ##### Code Size Rules ############################################################ -->
    <rule ref="rulesets/codesize.xml/ExcessiveParameterList">
        <properties>
            <property name="minimum" 
                value="10" />
        </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/TooManyFields">
        <properties>
            <property name="maxfields" 
                value="15" />
        </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/TooManyMethods">
        <properties>
            <property name="maxmethods" 
                value="40" />
            <property name="ignorepattern" 
                value="(^(set|get|is))i" />
        </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/TooManyPublicMethods">
        <properties>
            <property name="maxmethods" 
                value="15" />
            <property name="ignorepattern" 
                value="(^(set|get|is))i" />
        </properties>
    </rule>

    <!-- ##### Design Rules ############################################################ -->
    <rule ref="rulesets/design.xml/ExitExpression" />
    <rule ref="rulesets/design.xml/EvalExpression" />
    <rule ref="rulesets/design.xml/GotoStatement" />
    <rule ref="rulesets/design.xml/DepthOfInheritance" />
    <rule ref="rulesets/design.xml/CouplingBetweenObjects" />
    <rule ref="rulesets/design.xml/DevelopmentCodeFragment">
        <properties>
            <property name="unwanted-functions" 
                value="var_dump,print_r,die,debug_zval_dump,debug_print_backtrace" />
        </properties>
    </rule>

    <!-- ##### Naming Rules ############################################################ -->
    <rule ref="rulesets/naming.xml/ShortVariable">
        <properties>
            <property name="minimum" 
                value="3" />
            <property name="exceptions" 
                value="id" />
        </properties>
    </rule>
    <rule ref="rulesets/naming.xml/LongVariable">
        <properties>
            <property name="maximum" 
                value="30" />
        </properties>
    </rule>
    <rule ref="rulesets/naming.xml/ShortMethodName">
        <properties>
            <property name="minimum" 
                value="3" />
            <property name="exceptions" 
                value="get,load" />
        </properties>
    </rule>
    <rule ref="rulesets/naming.xml/ConstructorWithNameAsEnclosingClass" />
    <rule ref="rulesets/naming.xml/ConstantNamingConventions" />
    <rule ref="rulesets/naming.xml/BooleanGetMethodName">
        <properties>
            <property name="checkParameterizedMethods" 
                value="true" />
        </properties>
    </rule>

    <!-- ##### Unused Code Rules ############################################################ -->
    <rule ref="rulesets/unusedcode.xml/UnusedPrivateField" />
    <rule ref="rulesets/unusedcode.xml/UnusedLocalVariable" />
    <rule ref="rulesets/unusedcode.xml/UnusedPrivateMethod" />
    <rule ref="rulesets/unusedcode.xml/UnusedFormalParameter" />
</ruleset>


