#!/bin/bash
HELP="Checkout to a branch, if it exists."
source "${HOME}/Shell/App/Git/Scripts/base.bash"

if [[ -e "${1}" ]]; then
    git checkout "${1}"
    exit 0
fi

# Try to checkout to given branch name
git rev-parse --verify "${1}" >> /dev/null 2>&1
if [[ $? -eq 0 ]]; then
    git checkout "${1}"
    exit 0
fi

# Try to append "GUEST-" to the branch name and checkout
git rev-parse --verify "GUEST-${1}" >> /dev/null 2>&1
if [[ $? -eq 0 ]]; then
    git checkout "GUEST-${1}"
    exit 0
fi

branches=$(git for-each-ref --format='%(refname:short)' refs/heads/*) >> /dev/null 2>&1S
for branch in $branches; do
    if [[ "${branch}" == "GUEST-${1}" ]]; then
        git checkout "${branch}"
        printf " \e[93mThe branch ${1} does not exist localy, but I checked out to "${branch}".\e[39m\n"
        exit 0
    fi
done

for branch in $branches; do
    if [[ "${branch}" == *"${1}"* ]]; then
        git checkout "${branch}"
        printf " \e[93mThe branch ${1} does not exist localy, but I checked out to "${branch}".\e[39m\n"
        exit 0
    fi
done

printf " \e[91mThe branch ${1} does not exist.\e[39m\n"
