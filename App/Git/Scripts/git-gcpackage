CONFLITS=()
DEPLOYMENTS_FOLDER=""
BRANCH=""
REPOSITORY=""

while getopts d:b:c:r: option
do
    case "${option}"
    in
        d) DEPLOYMENTS_FOLDER=${OPTARG};;
        b) BRANCH=${OPTARG};;
        c) CONFLITS+=(${OPTARG});;
        r) REPOSITORY=(${OPTARG});;
     esac
done

function printHelp()
{
    printf "\e[33m    '-d //path//to//deployments//folder'\e[39m\n"
    printf "\e[33m    '-b GUEST-XXXX #Package branche'\e[39m\n"
    printf "\e[33m    '-c \"GUEST-AAAA\" -c \"GUEST-BBBB\" -c \"GUEST-CCCC\" #Check conflicts with the previous branches'\e[39m\n"
    printf "\e[33m    '-r cmf #If null, assumes the app. Else add the sufix.'\e[39m\n"
}

if [[ "${DEPLOYMENTS_FOLDER}" == "" ]]; then
    printf "\e[91mYou must provide the deployments folder.\n"
    printHelp
    exit 1
fi

if [[ ! -d ${DEPLOYMENTS_FOLDER}  ]]; then
    printf "\e[91mThe deployments folder do not exist.\n"
    printHelp
    exit 1
fi

if [[ "${BRANCH}" == "" ]]; then
    BRANCH="$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/')"
    BRANCH="$(echo $BRANCH | tr -d '[:space:]')"
    printf "\e[93mYou did not provided any branch so I'll just create the package.\n\e[39m"
fi


if [[ "${BRANCH}" == "master"  ]]; then
    printf "\e[91mCan't create a package for master.\n"
    printHelp
    exit 1
fi

printf "\e[92m"
git checkout master

printf "\e[39m"
git pull --quiet
git pull origin master --quiet --rebase=false --no-edit

printf "\e[92m"
git checkout "$BRANCH"

printf "\e[39m"
git pull origin master --quiet --rebase=false --no-edit

FILES_CHANGED=(`git diff --name-only master..$BRANCH`)
if [ ${#FILES_CHANGED[@]} -eq 0 ]; then
  printf "\e[93mNothing changed between '$BRANCH ' and master.\n"
  exit 1
fi

#COUNT=2
#while [ "" != "${!COUNT}" ];
HAS_CONFLITS=0

for c in "${CONFLITS[@]}"
do
#    CONFLIT_BRANCH="${!COUNT}"
    CONFLIT_BRANCH="${c}"
    if [[ "${CONFLIT_BRANCH}" == "master" ]]; then
#        COUNT=$(expr $COUNT + 1)
        continue
    fi
    printf "\e[93mChecking branch ${CONFLIT_BRANCH} \e[92m\n"

    git checkout "$CONFLIT_BRANCH"
    printf "\e[39m"
    git pull origin master --quiet --rebase=false --no-edit

    FILES_BRANCH_CHANGED=(`git diff --name-only master..$CONFLIT_BRANCH`)

    for i in "${FILES_CHANGED[@]}"
    do
        for z in "${FILES_BRANCH_CHANGED[@]}"
        do
            if [ "$i" == "$z" ]
            then
                printf "\e[91mConflits file: ${i} \e[39m\n"
                HAS_CONFLITS=1
            fi
        done
    done
#    COUNT=$(expr $COUNT + 1)
#    echo $COUNT
done

if [ "$HAS_CONFLITS" = "1" ]
then
    printf "\e[91mThis package CONFLITS with other deploy packages. Ask the developer for help.\n"
    exit 1
fi
printf "\e[93m No Conflits found. Proceed to package tar creation.\e[39m\n"

git checkout "$BRANCH"

printf "\e[93m\n"

if [ "$REPOSITORY" != "" ]
then
  REPOSITORY=_$REPOSITORY
fi
tar -cvf ${DEPLOYMENTS_FOLDER}/ticket_${BRANCH}${REPOSITORY}.tar `git diff --name-only master..${BRANCH}`

printf "\e[93m Change to deployments directory.\e[39m\n"

cd ${DEPLOYMENTS_FOLDER}

printf "\e[93m Update deployments repository.\e[39m\n"

git pull --quiet --rebase=false
git add ticket_${BRANCH}${REPOSITORY}.tar
git commit -m "${BRANCH}${REPOSITORY} - auto generated package"
git push

printf "\e[93mPackage ticket_${BRANCH}${REPOSITORY}.tar generated and pushed to packages repository\n"
